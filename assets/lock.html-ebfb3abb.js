import{_ as n,p as s,q as a,a1 as t}from"./framework-fa6fd9c7.js";const p={},e=t(`<h1 id="php-锁" tabindex="-1"><a class="header-anchor" href="#php-锁" aria-hidden="true">#</a> PHP 锁</h1><h2 id="由来" tabindex="-1"><a class="header-anchor" href="#由来" aria-hidden="true">#</a> 由来</h2><p>由于<code>PHP</code>是没有 Java 语言级别的锁关键字及基础类，单机上可以借助文件锁来实现锁，来完成对并发资源的串行访问。</p><h2 id="解决的问题" tabindex="-1"><a class="header-anchor" href="#解决的问题" aria-hidden="true">#</a> 解决的问题</h2><p>例如门票超卖问题，一共有 10 张票，不加锁，多个并发访问可能导致票超卖</p><p>问题出在，检测票数量与减少票之间不是原子操作导致的。 问题代码，这里使用数据库来存储票的数量</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$meta_id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;21&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$piaoshu</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$piaoshu</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//自减</span>
            <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setDec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并发访问,会导致票数超卖变成负数</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><h3 id="使用mysql数据库的事务-for-update-排他锁机制" tabindex="-1"><a class="header-anchor" href="#使用mysql数据库的事务-for-update-排他锁机制" aria-hidden="true">#</a> 使用mysql数据库的事务 <code>for update</code> 排他锁机制</h3><p>使用事务,在事务中使用 for update 语句锁住这条数据,操作完成后释放. 这种方式局限<code>mysql</code>数据操作,如果有其他的操作依然不能保证原子性.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">count_v_mysql</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//假设</span>
        <span class="token variable">$meta_id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;21&#39;</span><span class="token punctuation">;</span>
        <span class="token function">M</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">startTrans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//锁住了21行数据</span>
        <span class="token comment">//select meta_value from meta  where meta_id = 21 for update</span>
        <span class="token variable">$piaoshu</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$piaoshu</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//自减</span>
            <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setDec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">M</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token function">M</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基于文件锁机制" tabindex="-1"><a class="header-anchor" href="#基于文件锁机制" aria-hidden="true">#</a> 基于文件锁机制</h3><p>优点是可以在任何<code>php</code>代码使用同一把锁</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>   <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">count_v_flock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 假设 lock_count 已经存在</span>
        <span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;lock_count&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取到锁才会执行 默认阻塞 flock($fp,LOCK_EX | LOCK_NB) 非阻塞模式(Windows 不支持)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">flock</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token constant">LOCK_EX</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//假设</span>
            <span class="token variable">$meta_id</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;21&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$piaoshu</span> <span class="token operator">=</span> <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$piaoshu</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//自减</span>
                <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;meta_id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$meta_id</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setDec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;meta_value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token string backtick-quoted-string">\`\`</span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","lock.html.vue"]]);export{k as default};
