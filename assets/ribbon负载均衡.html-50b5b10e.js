import{_ as a,p as e,q as n,a1 as s}from"./framework-fa6fd9c7.js";const i="/assets/image-20201211111459027-71976277.png",t="/assets/image-20201211112956873-5d3fe46f.png",r="/assets/image-20201211113318634-564d43ea.png",c={},o=s('<h1 id="ribbon-组件" tabindex="-1"><a class="header-anchor" href="#ribbon-组件" aria-hidden="true">#</a> Ribbon 组件</h1><p><img src="'+i+`" alt="image-20201211111459027"></p><p>openfeign 通过 nacos 获得可用节点</p><p>ribbon 计算调用的节点</p><h2 id="配置负载均衡" tabindex="-1"><a class="header-anchor" href="#配置负载均衡" aria-hidden="true">#</a> 配置负载均衡</h2><p>设置微服务使用的负载均衡策略</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">service-provider</span><span class="token punctuation">:</span> <span class="token comment"># 微服务名称</span>
  <span class="token key atrule">ribbon</span><span class="token punctuation">:</span>
    <span class="token key atrule">NFLoadBalancerRuleClassName</span><span class="token punctuation">:</span> com.netflix.loadbalancer.RandomRule <span class="token comment"># 随机策略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+t+'" alt="image-20201211112956873"></p><p>项目根据实际需求选择不同的策略</p><h2 id="内置的负载均衡策略" tabindex="-1"><a class="header-anchor" href="#内置的负载均衡策略" aria-hidden="true">#</a> 内置的负载均衡策略</h2><p><img src="'+r+'" alt="image-20201211113318634"></p>',11),l=[o];function p(d,m){return e(),n("div",null,l)}const _=a(c,[["render",p],["__file","ribbon负载均衡.html.vue"]]);export{_ as default};
