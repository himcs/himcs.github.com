import{_ as n,p as a,q as s,a1 as t}from"./framework-fa6fd9c7.js";const e={},p=t(`<h2 id="bpmn-2-0" tabindex="-1"><a class="header-anchor" href="#bpmn-2-0" aria-hidden="true">#</a> BPMN 2.0</h2><h3 id="流程定义" tabindex="-1"><a class="header-anchor" href="#流程定义" aria-hidden="true">#</a> 流程定义</h3><p>后缀名为**.bpmn20.xml 或 .bpmn**</p><p>根节点是 <code>definitions</code>,<code>process</code>是定义的流程</p><p>process有两个属性：</p><ul><li><p>id 对应Activiti<code> ProcessDefinition</code>对象的<strong>key</strong>属性。流程启动通过<code>key</code>启动</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService
                <span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;myProcess&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意，它和<code>startProcessInstanceById</code>方法不同。 这个方法期望使用Activiti引擎在发布时自动生成的id。， 可以通过调用<code>processDefinition.getId()</code>方法获得这个值。 生成的id的格式为**&#39;key:version&#39;<strong>， 最大长度限制为</strong>64个字符**， 如果你在启动时抛出了一个<code>ActivitiException</code>，说明生成的id太长了， 需要限制流程的<em>key</em>的长度。</p></blockquote></li><li><p>name 引擎自己不会使用这个属性，它可以用来在用户接口显示便于阅读的名称。</p></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>definitions</span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.omg.org/spec/BPMN/20100524/MODEL<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>activiti</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://activiti.org/bpmn<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">targetNamespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Examples<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>process</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myProcess<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>My First Process<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    ..
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>process</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>definitions</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开始事件" tabindex="-1"><a class="header-anchor" href="#开始事件" aria-hidden="true">#</a> 开始事件</h3><p>流程入口</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>process</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myProcess<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myProcess<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>startEvent</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>theStart<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>startEvent</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>process</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="用户任务" tabindex="-1"><a class="header-anchor" href="#用户任务" aria-hidden="true">#</a> 用户任务</h3><p>流程中与操作者相关的任务声明</p><p>下面任务分配给 accountancy 组</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>writeReportTask<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Write monthly financial report<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>documentation</span><span class="token punctuation">&gt;</span></span>
              Write monthly financial report for publication to shareholders.
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>documentation</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>potentialOwner</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resourceAssignmentExpression</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>formalExpression</span><span class="token punctuation">&gt;</span></span>accountancy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>formalExpression</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resourceAssignmentExpression</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>potentialOwner</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>userTask</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结束事件" tabindex="-1"><a class="header-anchor" href="#结束事件" aria-hidden="true">#</a> 结束事件</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>endEvent</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>theEnd<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="事件连线" tabindex="-1"><a class="header-anchor" href="#事件连线" aria-hidden="true">#</a> 事件连线</h3><p>元素使用连线连接，这些连线拥有<code>source</code> 和 <code>target</code>属性， 定义了连线的<em>方向</em>。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sequenceFlow</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>flow1<span class="token punctuation">&#39;</span></span> <span class="token attr-name">sourceRef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>theStart<span class="token punctuation">&#39;</span></span> <span class="token attr-name">targetRef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>writeReportTask<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sequenceFlow</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>flow2<span class="token punctuation">&#39;</span></span> <span class="token attr-name">sourceRef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>writeReportTask<span class="token punctuation">&#39;</span></span> <span class="token attr-name">targetRef</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>theEnd<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="流程实例启动" tabindex="-1"><a class="header-anchor" href="#流程实例启动" aria-hidden="true">#</a> 流程实例启动</h2><p>所有流程实例对应一个流程定义，类似于对象与类</p><p>为了使用流程定义创建流程实例， 首先要<strong>发布</strong>业务流程， 这意味着两方面：</p><ul><li>流程定义会保存到持久化的数据存储里， 是为你的Activiti引擎特别配置。所以部署好你的业务流程， 我们就能确认引擎重启后还能找到流程定义。</li><li>BPMN 2.0流程文件会解析成内存对象模型， 可以通过Activiti API操作。</li></ul><p>发布</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Deployment</span> deployment <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addClasspathResource</span><span class="token punctuation">(</span><span class="token string">&quot;FinancialReportProcess.bpmn20.xml&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获得实例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService
                <span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;onboarding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="任务列表" tabindex="-1"><a class="header-anchor" href="#任务列表" aria-hidden="true">#</a> 任务列表</h2><p>通过 TaskService 获得任务</p><h3 id="获取-某个人-的任务" tabindex="-1"><a class="header-anchor" href="#获取-某个人-的任务" aria-hidden="true">#</a> 获取 某个人 的任务</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> tasks <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">taskCandidateOrAssigned</span><span class="token punctuation">(</span><span class="token string">&quot;kermit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意我们传入的用户必须是<em>accountancy</em>组的一个成员， 要和流程定义中向对应：</p><h3 id="获取群组的任务" tabindex="-1"><a class="header-anchor" href="#获取群组的任务" aria-hidden="true">#</a> 获取群组的任务</h3><p>我们也可以使用群组名称，通过任务查询API来获得相关的结果。 现在可以在代码中添加如下逻辑：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> tasks <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">taskCandidateGroup</span><span class="token punctuation">(</span><span class="token string">&quot;accountancy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="任务完成" tabindex="-1"><a class="header-anchor" href="#任务完成" aria-hidden="true">#</a> 任务完成</h2><p>调用 <code>TaskService.complete</code>完成当前任务, 完成后 任务会被删除 并 创建下一个任务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Task task = tasks.get(0);
        // 任务完成
//         任务会把自己从运行库中删除。 流程会沿着单独一个外出连线执行，移动到第二个任务 （&#39;审批报告&#39;）
taskService.complete(task.getId());
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看任务历史" tabindex="-1"><a class="header-anchor" href="#查看任务历史" aria-hidden="true">#</a> 查看任务历史</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HistoricProcessInstance</span> historicProcessInstance <span class="token operator">=</span>
                historyService<span class="token punctuation">.</span><span class="token function">createHistoricProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Process instance end time: &quot;</span> <span class="token operator">+</span> historicProcessInstance<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="开发" tabindex="-1"><a class="header-anchor" href="#开发" aria-hidden="true">#</a> 开发</h1><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>从配置文件或者编程的方式配置，详见文档，最终会获得一个<code>ProcessEngine</code>对象</p><h2 id="表" tabindex="-1"><a class="header-anchor" href="#表" aria-hidden="true">#</a> 表</h2><h2 id="理解数据库表的命名" tabindex="-1"><a class="header-anchor" href="#理解数据库表的命名" aria-hidden="true">#</a> 理解数据库表的命名</h2><p>Activiti的表都以**ACT_**开头。 第二部分是表示表的用途的两个字母标识。 用途也和服务的API对应。</p><ul><li><strong>ACT_RE_*</strong>: &#39;RE&#39;表示<code>repository</code>。 这个前缀的表包含了流程定义和流程静态资源 （图片，规则，等等）。</li><li><strong>ACT_RU_*</strong>: &#39;RU&#39;表示<code>runtime</code>。 这些运行时的表，包含流程实例，任务，变量，异步任务，等运行中的数据。 Activiti只在流程实例执行过程中保存这些数据， 在流程结束时就会删除这些记录。 这样运行时表可以一直很小速度很快。</li><li><strong>ACT_ID_*</strong>: &#39;ID&#39;表示<code>identity</code>。 这些表包含身份信息，比如用户，组等等。</li><li><strong>ACT_HI_*</strong>: &#39;HI&#39;表示<code>history</code>。 这些表包含历史数据，比如历史流程实例， 变量，任务等等。</li><li><strong>ACT_GE_*</strong>: <code>通用</code>数据， 用于不同场景下。</li></ul>`,47),c=[p];function o(i,l){return a(),s("div",null,c)}const r=n(e,[["render",o],["__file","activiti.html.vue"]]);export{r as default};
