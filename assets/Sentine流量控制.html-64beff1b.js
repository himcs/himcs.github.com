import{_ as e,p as a,q as i,a1 as d}from"./framework-fa6fd9c7.js";const c="/assets/image-20201211141242221-888e90a3.png",r="/assets/image-20201211141314475-075c079b.png",t="/assets/image-20201211141421739-747a5748.png",n="/assets/image-20201211141851755-615f39c8.png",s={},h=d('<h1 id="sentine流量控制-限流" tabindex="-1"><a class="header-anchor" href="#sentine流量控制-限流" aria-hidden="true">#</a> Sentine流量控制（限流）</h1><p>直接通过仪表盘控制</p><p>设置<code>QPS</code></p><p><img src="'+c+'" alt="image-20201211141242221"></p><h2 id="高级选项" tabindex="-1"><a class="header-anchor" href="#高级选项" aria-hidden="true">#</a> 高级选项</h2><h3 id="直接" tabindex="-1"><a class="header-anchor" href="#直接" aria-hidden="true">#</a> 直接</h3><p>超过QPS 直接显示</p><p><img src="'+r+'" alt="image-20201211141314475"></p><h3 id="关联" tabindex="-1"><a class="header-anchor" href="#关联" aria-hidden="true">#</a> 关联</h3><p><img src="'+t+'" alt="image-20201211141421739"></p><p>当 <code>/list</code>QPS超过1，<code>/client/ip</code>直接失败</p><h3 id="链路" tabindex="-1"><a class="header-anchor" href="#链路" aria-hidden="true">#</a> 链路</h3><p>当入口资源每秒<code>QPS</code>超过1，在访问<code>/client/ip</code>会失败</p><p>先调用<code>/list</code> -&gt; 然后调用 <code>/client/ip</code></p><h3 id="快速失败" tabindex="-1"><a class="header-anchor" href="#快速失败" aria-hidden="true">#</a> 快速失败</h3><p>直接失败</p><h3 id="warm-up" tabindex="-1"><a class="header-anchor" href="#warm-up" aria-hidden="true">#</a> Warm Up</h3><p>预热，缓慢拉升QPS</p><p>当QPS为<code>1000</code>时， 瞬间流量为1000时,将<code>QPS</code>缓慢拉升到<code>1000</code>,超出阈值的访问处于队列等待状态。</p><p><img src="'+n+'" alt="image-20201211141851755"></p><h3 id="排队等待" tabindex="-1"><a class="header-anchor" href="#排队等待" aria-hidden="true">#</a> 排队等待</h3><p>如题，请求匀速进入系统</p>',22),o=[h];function p(_,l){return a(),i("div",null,o)}const g=e(s,[["render",p],["__file","Sentine流量控制.html.vue"]]);export{g as default};
